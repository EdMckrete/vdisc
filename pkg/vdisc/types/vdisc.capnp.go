// Code generated by capnpc-go. DO NOT EDIT.

package vdisc_types

import (
	vdisc_types_v1 "github.com/NVIDIA/vdisc/pkg/vdisc/types/v1"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type VDisc struct{ capnp.Struct }

// VDisc_TypeID is the unique identifier for the type VDisc.
const VDisc_TypeID = 0x8eca7be395a515b4

func NewVDisc(s *capnp.Segment) (VDisc, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VDisc{st}, err
}

func NewRootVDisc(s *capnp.Segment) (VDisc, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VDisc{st}, err
}

func ReadRootVDisc(msg *capnp.Message) (VDisc, error) {
	root, err := msg.RootPtr()
	return VDisc{root.Struct()}, err
}

func (s VDisc) String() string {
	str, _ := text.Marshal(0x8eca7be395a515b4, s.Struct)
	return str
}

func (s VDisc) V1() (vdisc_types_v1.VDisc, error) {
	p, err := s.Struct.Ptr(0)
	return vdisc_types_v1.VDisc{Struct: p.Struct()}, err
}

func (s VDisc) HasV1() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VDisc) SetV1(v vdisc_types_v1.VDisc) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewV1 sets the v1 field to a newly
// allocated vdisc_types_v1.VDisc struct, preferring placement in s's segment.
func (s VDisc) NewV1() (vdisc_types_v1.VDisc, error) {
	ss, err := vdisc_types_v1.NewVDisc(s.Struct.Segment())
	if err != nil {
		return vdisc_types_v1.VDisc{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VDisc_List is a list of VDisc.
type VDisc_List struct{ capnp.List }

// NewVDisc creates a new list of VDisc.
func NewVDisc_List(s *capnp.Segment, sz int32) (VDisc_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VDisc_List{l}, err
}

func (s VDisc_List) At(i int) VDisc { return VDisc{s.List.Struct(i)} }

func (s VDisc_List) Set(i int, v VDisc) error { return s.List.SetStruct(i, v.Struct) }

func (s VDisc_List) String() string {
	str, _ := text.MarshalList(0x8eca7be395a515b4, s.List)
	return str
}

// VDisc_Promise is a wrapper for a VDisc promised by a client call.
type VDisc_Promise struct{ *capnp.Pipeline }

func (p VDisc_Promise) Struct() (VDisc, error) {
	s, err := p.Pipeline.Struct()
	return VDisc{s}, err
}

func (p VDisc_Promise) V1() vdisc_types_v1.VDisc_Promise {
	return vdisc_types_v1.VDisc_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

const schema_c6455bc28c9de795 = "x\xda\x12\xa8u`2d\x95gf`\x08Tae" +
	"\xfb\xbfEt\xe9\xd4\xc7\xd5\xa7\xfa\x18\x04e\x18\xffO" +
	"}>\xb7\xe7P\xb4\xeb1\x06VFv\x06\x06\xe3R" +
	"F!F\xe1V\x10S\xb8\x91\xd1\x9e!\xf2\x7fAv" +
	"\xba~YJf1s\xb2~IeAj1\x98\x93" +
	"\xac\x97\x9cX\x90W`\x15\xe6\x92Y\xcc\x98\x1c\xc0\xc8" +
	"\x18\xc8\xc2\xcc\xc2\xc0\xc0\xc2\xc8\xc0 \xc8+\xc5\xc0\x10" +
	"\xc8\xc1\xcc\x18(\xc2\xc4\xc8\\f\xc8(\xf0?i\xc1" +
	"\xc2cbQo\xde2002\x0a00\x02\x02\x00" +
	"\x00\xff\xffH\xa2%\xab"

func init() {
	schemas.Register(schema_c6455bc28c9de795,
		0x8eca7be395a515b4)
}
